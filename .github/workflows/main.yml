name: Build and Deploy to EC2 via Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: wedvice-db
          POSTGRES_USER: wedviceuser
          POSTGRES_PASSWORD: wedvicepass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1️⃣ 리포지토리 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v2

      # 2️⃣ JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3️⃣ Gradle 실행 권한 부여
      - name: Ensure gradlew is executable
        run: chmod +x gradlew

      # 4️⃣ Gradle 빌드
      - name: Build with Gradle
        run: |
          ./gradlew clean build
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/wedvice-db
          SPRING_DATASOURCE_USERNAME: wedviceuser
          SPRING_DATASOURCE_PASSWORD: wedvicepass

      # 5️⃣ 빌드된 파일, Dockerfile, docker-compose.yml EC2로 전송 테스트
      - name: Upload build files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*.jar,Dockerfile,docker-compose.yml"
          target: "/home/ec2-user/app"

      # 6️⃣ EC2에서 Docker 빌드 및 컨테이너 실행
      - name: SSH to EC2 and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Docker가 설치되지 않은 경우 설치
            if ! command -v docker &> /dev/null; then
              echo "Docker is not installed. Installing now..."
              sudo yum update -y
              sudo amazon-linux-extras enable docker
              sudo yum install -y docker
              sudo systemctl enable --now docker
              sudo usermod -aG docker $USER
            else
              echo "Docker is already installed."
            fi
            
            # Docker Compose가 설치되지 않은 경우 설치
            if ! command -v docker-compose &> /dev/null; then
              echo "Docker Compose is not installed. Installing now..."
              DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
              mkdir -p $DOCKER_CONFIG/cli-plugins
              curl -SL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
              chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
            else
              echo "Docker Compose is already installed."
            fi
            
            # 배포 시작
            cd /home/ec2-user/app
            docker-compose down || true
            docker system prune -f
            docker-compose up -d --build
